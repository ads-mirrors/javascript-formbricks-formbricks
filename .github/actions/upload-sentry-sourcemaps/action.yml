name: 'Upload Sentry Sourcemaps'
description: 'Extract sourcemaps from Docker image and upload to Sentry'

inputs:
  docker_image:
    description: 'Docker image to extract sourcemaps from (e.g., ghcr.io/formbricks/formbricks:v1.2.3)'
    required: true
  release_version:
    description: 'Sentry release version (e.g., v1.2.3)'
    required: true
  environment:
    description: 'Environment to deploy to (prod/stage)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install Sentry CLI
      shell: bash
      run: |
        # Install official Sentry CLI
        curl -sL https://sentry.io/get-cli/ | bash

    - name: Create Sentry Release
      shell: bash
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: formbricks
        SENTRY_PROJECT: formbricks-cloud
      run: |
        echo "üöÄ Creating Sentry release: ${{ inputs.release_version }} for environment: ${{ inputs.environment }}"
        
        # Create a new release
        sentry-cli releases new "${{ inputs.release_version }}"
        sentry-cli releases set-commits "${{ inputs.release_version }}" --auto

    - name: Extract Sourcemaps from Docker Image
      shell: bash
      run: |
        echo "üì¶ Extracting sourcemaps from Docker image: ${{ inputs.docker_image }}"
        
        # Extract sourcemaps from the already-built Docker image
        docker create --name temp-container ${{ inputs.docker_image }}
        docker cp temp-container:/home/nextjs/apps/web/.next ./.next-extracted
        docker rm temp-container
        
        # Debug: Check what sourcemaps we extracted
        echo "üìã Debug - Found sourcemaps:"
        find ./.next-extracted -name "*.js.map" -type f | head -10

    - name: Upload Sourcemaps to Sentry
      shell: bash
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: formbricks
        SENTRY_PROJECT: formbricks-cloud
      run: |
        # Upload sourcemaps to Sentry (fail fast if structure is wrong)
        if [ ! -d "./.next-extracted/static" ]; then
          echo "‚ùå ERROR: Expected .next/static directory not found!"
          echo "üìã Available directories:"
          ls -la ./.next-extracted/
          echo "üîç Available sourcemaps:"
          find ./.next-extracted -name "*.js.map" -type f | head -5
          echo "üí• Build structure is unexpected - aborting sourcemap upload"
          exit 1
        fi
        
        echo "üì§ Uploading sourcemaps to Sentry..."
        sentry-cli sourcemaps upload \
          --release="${{ inputs.release_version }}" \
          --url-prefix="~/_next/static/" \
          --ext js \
          --ext map \
          ./.next-extracted/static/
        echo "‚úÖ Sourcemaps uploaded successfully"

    - name: Finalize Sentry Release
      shell: bash
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: formbricks
        SENTRY_PROJECT: formbricks-cloud
      run: |
        # Finalize the release
        sentry-cli releases finalize "${{ inputs.release_version }}"
        sentry-cli releases deploys "${{ inputs.release_version }}" new --env "${{ inputs.environment }}"
        
        echo "‚úÖ Sentry release ${{ inputs.release_version }} deployed to ${{ inputs.environment }}"

    - name: Cleanup
      shell: bash
      if: always()
      run: |
        # Clean up extracted files
        rm -rf ./.next-extracted
        echo "üßπ Cleaned up extracted files" 